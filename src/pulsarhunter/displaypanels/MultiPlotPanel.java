/*
Copyright (C) 2005-2007 Michael Keith, University Of Manchester

email: mkeith@pulsarastronomy.net
www  : www.pulsarastronomy.net/wiki/Software/PulsarHunter

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

*/
/*
 * MultiPlotPanel.java
 *
 * Created on 25 January 2007, 17:09
 */

package pulsarhunter.displaypanels;

import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author  mkeith
 */
public class MultiPlotPanel extends javax.swing.JPanel {
    private int defaultPlot;
    private String[] names;
    private JPanel[] plots;
    private JComboBox comboBox;
    private String name;
    
    /** Creates new form MultiPlotPanel */
    public MultiPlotPanel(String name, String[] names, JPanel[] plots, int defaultPlot) {
        this.defaultPlot = defaultPlot;
        this.names = names;
        this.plots = plots;
        this.name = name;
        
        initComponents();
        
        JPanel blank = new JPanel();
        
        this.jLabel_head.setText(name);
        
        comboBox = new JComboBox(names);
        
        comboBox.setSelectedIndex(defaultPlot);
        
        comboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxChangedEvent(evt);
            }
        });
        
        comboBox.setFont(new java.awt.Font("Dialog", 0, 10));
        
        for(int i = 0; i < plots.length; i++){
            if(plots[i] == null)plots[i] = blank;
        }
        
        this.jPanel_head.add(comboBox);
        this.jPanel_plot.removeAll();
        this.jPanel_plot.add(plots[defaultPlot]);
        
    }
    
    
    private void comboBoxChangedEvent(java.awt.event.ItemEvent evt) {
        
        Runnable task = new Runnable(){
            public void run(){
                // Change the plots!
                MultiPlotPanel.this.setVisible(false);
                MultiPlotPanel.this.jPanel_plot.removeAll();
                JPanel plot = plots[comboBox.getSelectedIndex()];
                MultiPlotPanel.this.jPanel_plot.add(plot);
                if(plot instanceof MKPlot2D){
                    MultiPlotPanel.this.jToggleButton1.setEnabled(true);
                    MultiPlotPanel.this.jToggleButton1.setSelected(((MKPlot2D)plot).isNormalised());
                } else {
                    MultiPlotPanel.this.jToggleButton1.setEnabled(false);
                }
                MultiPlotPanel.this.validate();
                MultiPlotPanel.this.setVisible(true);
            }
        };
        SwingUtilities.invokeLater(task);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel_plot = new javax.swing.JPanel();
        jPanel_head = new javax.swing.JPanel();
        jLabel_head = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_plot.setLayout(new java.awt.BorderLayout());

        add(jPanel_plot, java.awt.BorderLayout.CENTER);

        jPanel_head.setLayout(new java.awt.GridLayout(1, 4));

        jLabel_head.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel_head.add(jLabel_head);

        jToggleButton1.setText("Normalise");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jPanel_head.add(jToggleButton1);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel1.setText("Select plot to display:");
        jPanel_head.add(jLabel1);

        add(jPanel_head, java.awt.BorderLayout.NORTH);

    }// </editor-fold>//GEN-END:initComponents
    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        final JPanel plot = plots[comboBox.getSelectedIndex()];
        if(plot instanceof MKPlot2D){
            Runnable task = new Runnable(){
                public void run(){
                    MultiPlotPanel.this.setVisible(false);
                    
                    ((MKPlot2D)plot).setNormalised(MultiPlotPanel.this.jToggleButton1.isSelected());
                    
                    MultiPlotPanel.this.validate();
                    MultiPlotPanel.this.setVisible(true);
                }
            };
            SwingUtilities.invokeLater(task);
        } else {
            this.jToggleButton1.setEnabled(false);
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_head;
    private javax.swing.JPanel jPanel_head;
    private javax.swing.JPanel jPanel_plot;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
    
}
